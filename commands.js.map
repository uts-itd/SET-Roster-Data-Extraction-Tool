{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/srdet.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["const SRDET = (() => {\n\t/* \n\t * Returns the name from a given cell value, removing any additional information found\n\t * inside the brackets. i.e. John Smith (9am-9.30am) => John Smith\n\t */\n\tfunction extractName(cellValue) {\n\t\tconst parenthesisIndex = cellValue.indexOf('(');\n\n\t\tif (parenthesisIndex > 0)\n\t\t\treturn cellValue.substring(0, parenthesisIndex - 1).trim();\n\n\t\treturn cellValue.trim();\n\t}\n\n\t/*\n\t * Returns the time override string from a given cell value.\n\t * e.g. John Smith (9.30am-10am) => 9.30am-10am\n\t */\n\tfunction extractTime(cellValue) {\n\t\tconst pattern = /(from?|from ?)?(2[0-3]|[01]?[0-9])[\\.\\:]([0-5][0-9])([ -]?|( - )?|( -)?|(- )?)((ti[l]{1,2})?|(ti[l]{1,2} )?)?(2[0-3]|[01]?[0-9])[\\.\\:]([0-5][0-9])|((from?|from ?)|((ti[l]{1,2})?|(ti[l]{1,2} )?))(2[0-3]|[01]?[0-9])[\\.\\:]([0-5][0-9])/g;\n\n\t\tlet matches = cellValue.match(pattern);\n\t\tlet timeString;\n\n\t\tmatches === null ? timeString = matches : timeString = matches[0];\n\n\t\treturn timeString;\n\t}\n\n\t/*\n\t * Returns true or false depending if it can find the string \"OT\".\n\t */\n\tfunction extractOT(cellValue) {\n\t\tconst pattern = /\\bOT\\b/;\n\n\t\treturn cellValue.match(pattern) !== null ? true : false;\n\t}\n\n\t/*\n\t * Returns true if the timeString is a range (i.e. 9.30-10)\n\t * Returns false if the timeString is not a range (i.e. 9.30)\n\t */\n\tfunction isTimeRange(timeString) {\n\t\tlet pattern = /(from?|from ?)?(2[0-3]|[01]?[0-9])[\\.\\:]([0-5][0-9])([ -]?|( - )?|( -)?|(- )?)((ti[l]{1,2})?|(ti[l]{1,2} )?)?(2[0-3]|[01]?[0-9])[\\.\\:]([0-5][0-9])/g;\n\n\t\tlet matches = timeString.match(pattern);\n\n\t\tif (matches === null)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/*\n\t * Returns a string that can be used for calculating the number of hours. e.g. 9.30 => 9.5\n\t */\n\tfunction convertTime(timeString) {\n\t\tlet timeStringArr = timeString.split('.');\n\n\t\tlet hour = timeStringArr[0] / 1;\n\t\tlet minutes = timeStringArr[1] / 60;\n\n\t\treturn hour + minutes;\n\t}\n\n\t/*\n\t * Returns a time range string corresponding to the cell column index\n\t */\n\tfunction getTimeString(columnIndex) {\n\t\tconst timeStrings = new Map([\n\t\t\t[3, \"8.00-9.00\"],\n\t\t\t[4, \"9.00-10.00\"],\n\t\t\t[5, \"10.00-11.00\"],\n\t\t\t[6, \"11.00-12.00\"],\n\t\t\t[7, \"12.00-1.00\"],\n\t\t\t[8, \"1.00-2.00\"],\n\t\t\t[9, \"2.00-3.00\"],\n\t\t\t[10, \"3.00-4.00\"],\n\t\t\t[11, \"4.00-5.00\"],\n\t\t\t[12, \"5.00-6.00\"],\n\t\t\t[13, \"6.00-7.00\"]\n\t\t]);\n\n\t\treturn timeStrings.get(columnIndex);\n\t}\n\n\t// not used\n\tfunction extractTimeRanges(row) {\n\t\tconst timePattern = /[0-9]{1,2}-[0-9]{1,2}/;\n\t\tconst timeMap = new Map();\n\t\tlet keyIndex = 2;\n\n\t\trow.forEach(item => {\n\t\t\tif(item.match(timePattern)) {\n\t\t\t\tconst timeStringArr = item.split('-').map(time => time + '.00');\n\t\t\t\tconst timeString = timeStringArr[0] + '-' + timeStringArr[1];\n\n\t\t\t\ttimeMap.set(keyIndex++, timeString);\n\t\t\t}\n\t\t});\n\n\t\treturn timeMap;\n\t}\n\n\t/*\n\t * Returns a date object converted from the Excel date serial number\n\t */\n\tfunction excelDateToJSDate(serial) {\n\t\tconst utc_days = Math.floor(serial - 25569);\n\t\tconst utc_value = utc_days * 86400;\n\t\tconst date_info = new Date(utc_value * 1000);\n\n\t\treturn date_info;\n\t}\n\n\tfunction cleanTimeStringOverride(timeStringOverride) {\n\t\tlet cleanedString = timeStringOverride.replace('until', 'til');\n\t\tcleanedString = cleanedString.replace('till', 'til');\n\t\tcleanedString = cleanedString.replace(':', '.');\n\n\t\treturn cleanedString;\n\t}\n\n\t// Gets the start and end time from the timeString or cellValue if time is present\n\tfunction getTime(timeString, cellValue) {\n\t\tconst timeStringArr = timeString.split('-');\n\n\t\t// Set start and end time based of column header (timeString)\n\t\tlet startTime = timeStringArr[0].trim();\n\t\tlet endTime = timeStringArr[1].trim();\n\n\t\t// Checks if there are any time override values in the cells (e.g. John Doe (from 9.30)\n\t\tlet timeStringOverride = SRDET.extractTime(cellValue);\n\t\t\n\t\t\n\t\tif (timeStringOverride !== null) {\n\t\t\tconst STARTSEMIPHORE = 'from';\n\t\t\tconst ENDSEMIPHORE = 'til';\n\n\t\t\t// clean the timeStringOverride (so it's consistent - e.g. hhmm delimiter to .)\n\t\t\ttimeStringOverride = cleanTimeStringOverride(timeStringOverride);\n\n\t\t\tconst timeStringOverrideArr = timeStringOverride.split('-');\n\n\t\t\t// [from 9.30, til 3.30], [from 9.30], [til 3.30]\n\t\t\ttimeStringOverrideArr.forEach(time => {\n\t\t\t\tif (time.includes(STARTSEMIPHORE))\n\t\t\t\t\tstartTime = SRDET.convertTime(time.replace(STARTSEMIPHORE, '').trim());\n\n\t\t\t\tif (time.includes(ENDSEMIPHORE))\n\t\t\t\t\tendTime = SRDET.convertTime(time.replace(ENDSEMIPHORE, '').trim());\n\t\t\t});\n\t\t}\n\n\t\treturn [+startTime, +endTime];\t\n\t}\n\n\treturn {\n\t\textractName,\n\t\textractTime,\n\t\textractOT,\n\t\textractTimeRanges,\n\t\tisTimeRange,\n\t\tconvertTime,\n\t\tgetTimeString,\n\t\tgetTime,\n\t\texcelDateToJSDate,\n\t};\n})();\n\nmodule.exports = SRDET;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const SRDET = require('./srdet');\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete.\n  event.completed();\n}\n\n// My SRDET stuff here:\nasync function extractData(event) {\n\tawait Excel.run(async (context) => {\n\t\tconst names = context.workbook.names;\n\t\tconst tables = context.workbook.tables;\n\t\tconst sheets = context.workbook.worksheets;\n\n\t\tcontext.workbook.load(\n\t\t\t'worksheets/items/name' + \n\t\t\t', tables/items/rows/items/values' +\n\t\t\t', tables/items/name' +\n\t\t\t', names/items/arrayValues/values' +\n\t\t\t', names/items/name'\n\t\t);\n\n\t\tawait context.sync();\n\n\t\t// create Roster Data Sheet if it doesn't exist\n\t\tcreateRosterDataSheet(sheets).activate();\n\n\t\t// create rosterData table if it doesn't exist\n\t\tconst rosterDataTable = createRosterDataTable(tables);\n\t\tconst tableNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\t\tlet rosterData = [];\n\n\t\ttableNames.forEach(tableName => {\n\t\t\tconst rosterTable = tables.items.find(item => item.name === tableName);\n\t\t\tconst date = names.items.find(item => item.name === `${tableName}_Date`).arrayValues.values[0][0];\n\t\t\t\n\t\t\trosterData = rosterData.concat(extractRosterData(rosterTable, date));\n\t\t});\n\n\t\trosterDataTable.rows.add(null, rosterData);\n\n\t\t// format table\n\t\trosterDataTable.getRange().format.autofitColumns();\n\t\trosterDataTable.columns.getItem('Date').getDataBodyRange().numberFormat = 'dd/mm/yyyy';\n\n\t\tevent.completed();\n\t});\n}\n\n// Create the table \"rosterTable\"\nfunction createRosterDataTable(tables) {\n\tconst tableName = 'rosterData';\n\tlet dataTable = tables.items.find(item => item.name === tableName);\n\n\tif (dataTable === undefined) {\n\t\tdataTable = tables.add(`'Roster Data'!A1:I1`, true);\n\n\t\tdataTable.name = tableName;\n\t\tdataTable.getHeaderRowRange().values = \n\t\t\t[[\"Name\", \"Service Point\", \"Date\", \"Start\", \"End\", \"Time\", \"OT\", \"Value\", \"Address\"]];\n\t} else {\n\t\tdataTable.rows.deleteRows(dataTable.rows.items);\n\t}\n\n\treturn dataTable;\n}\n\n// Create the worksheet \"Roster Data\"\nfunction createRosterDataSheet(sheets) {\n\tconst wSheetName = 'Roster Data';\n\n\tlet rosterDataSheet = sheets.items.find(sheet => sheet.name === wSheetName);\n\n\tif (rosterDataSheet === undefined)\n\t\trosterDataSheet = sheets.add(wSheetName);\n\n\treturn rosterDataSheet;\n}\n\n// Extract data from a single roster table, i.e Monday\nfunction extractRosterData(table, date) {\n\tconst rows = table.rows.items;\n\tconst rosterData = [];\n\tconst address = '';\n\n\tconst STARTTIMESEMIPHORE = 'from';\n\tconst ENDTIMESEMIPHORE = 'til';\n\n\trows.forEach(row => {\n\t\tconst servicePoint = row.values[0][0];\n\n\t\tfor (let colIndex = 3; colIndex < 14; colIndex++) {\n\t\t\tconst cellValue = row.values[0][colIndex];\n\n\t\t\tif (cellValue !== '') {\n\t\t\t\tconst name = SRDET.extractName(cellValue);\n\n\t\t\t\t// Get start and end times\n\t\t\t\tconst timeArray = SRDET.getTime(SRDET.getTimeString(colIndex), cellValue);\n\t\t\t\tconst startTime = timeArray[0];\n\t\t\t\tconst endTime = timeArray[1];\n\n\t\t\t\t// Calculate the time (hours)\n\t\t\t\tconst time = endTime > startTime ?\n\t\t\t\t\tendTime - startTime :\n\t\t\t\t\tendTime + 12 - startTime;\n\n\t\t\t\t// Get OT\n\t\t\t\tconst dateObj = SRDET.excelDateToJSDate(date);\n\t\t\t\tlet ot = '';\n\n\t\t\t\tif (SRDET.extractOT(cellValue) === 'OT' || dateObj.getDay() == 6 || dateObj.getDay() == 7)\n\t\t\t\t\tot = 'OT';\n\n\t\t\t\tconst value = cellValue;\n\n\t\t\t\trosterData.push([\n\t\t\t\t\tname, servicePoint, date, startTime, endTime, time, ot, value, address\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn rosterData;\n}\n\nasync function tryCatch(callback) {\n\ttry {\n\t\tawait callback();\n\t} catch (error) {\n\t\t// TODO: display error in UI.\n\t\tconsole.error(error);\n\t}\n}\n\nOffice.actions.associate(\"extractData\", extractData);\n\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n"],"names":["SRDET","extractName","cellValue","parenthesisIndex","indexOf","substring","trim","extractTime","matches","match","extractOT","extractTimeRanges","row","timePattern","timeMap","Map","keyIndex","forEach","item","timeStringArr","split","map","time","timeString","set","isTimeRange","convertTime","getTimeString","columnIndex","get","getTime","startTime","endTime","timeStringOverride","STARTSEMIPHORE","cleanedString","replace","cleanTimeStringOverride","includes","excelDateToJSDate","serial","utc_days","Math","floor","Date","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","require","_extractData","_callee2","event","_context2","Excel","run","_ref","_callee","context","names","tables","sheets","rosterDataTable","rosterData","_context","workbook","worksheets","load","sync","createRosterDataSheet","activate","createRosterDataTable","tableName","rosterTable","items","find","date","concat","arrayValues","extractRosterData","rows","add","getRange","format","autofitColumns","columns","getItem","getDataBodyRange","numberFormat","completed","_x3","dataTable","getHeaderRowRange","deleteRows","wSheetName","rosterDataSheet","sheet","table","servicePoint","colIndex","timeArray","dateObj","ot","getDay","Office","onReady","actions","associate","_x","message","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","mailbox","notificationMessages","replaceAsync"],"sourceRoot":""}